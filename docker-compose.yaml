version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: todo-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: user_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - todo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # User Service
  user-service:
    build:
      context: .
      dockerfile: services/user-service/Dockerfile
    container_name: todo-user-service
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: user_db
      GRPC_PORT: 50051
      HTTP_PORT: 8081
    ports:
      - "50051:50051"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - todo-network
    restart: unless-stopped

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    container_name: todo-auth-service
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: user_db
      GRPC_PORT: 50052
      HTTP_PORT: 8082
      JWT_SECRET: your-secret-key-change-in-production
    ports:
      - "50052:50052"
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      user-service:
        condition: service_started
    networks:
      - todo-network
    restart: unless-stopped

  # Task Service
  task-service:
    build:
      context: .
      dockerfile: services/task-service/Dockerfile
    container_name: todo-task-service
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: task_db
      GRPC_PORT: 50053
      HTTP_PORT: 8083
    ports:
      - "50053:50053"
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - todo-network
    restart: unless-stopped

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: services/notification-service/Dockerfile
    container_name: todo-notification-service
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: notification_db
      GRPC_PORT: 50054
      HTTP_PORT: 8084
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USERNAME: ""
      SMTP_PASSWORD: ""
      SMTP_FROM: noreply@todo.com
    ports:
      - "50054:50054"
      - "8084:8084"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - todo-network
    restart: unless-stopped

networks:
  todo-network:
    driver: bridge

volumes:
  postgres_data:

